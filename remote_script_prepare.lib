CURRENTSTEP=0

set_next_step() {
	CURRENTSTEP=$((CURRENTSTEP + 1))
	echo $CURRENTSTEP > "$BACKUPSTATEFILE"
}

if [ ! -d "$BACKUPDIR" ]; then
	echo "Backup directory $BACKUPDIR not found"
	exit 99
fi

if [ -f "$BACKUPSTATEFILE" ]; then
	CURRENTSTEP=$(cat "$BACKUPSTATEFILE")
	echo "Resuming last backup at step $CURRENTSTEP"
fi

get_file_name(){
	echo "backup"_$(printf '%02i' $1)
}

cd "$BACKUPDIR" || exit 1

# Step 1: delete last backup (6)
if [ "$CURRENTSTEP" -eq 0 ]; then
	LASTBACKUP="$(get_file_name "$BACKUPCOUNT")"
	if [ -d "$LASTBACKUP" ]; then
		mv "$LASTBACKUP" backup_expired
	fi
	set_next_step
fi

# Step 1-penultimate : move directories 6-1 to 7-2 (if BACKUPCOUNT=7)
if [ "$CURRENTSTEP" -lt "$BACKUPCOUNT" ]; then
	for move in $(seq $((BACKUPCOUNT-CURRENTSTEP)) -1 1); do
		if [ $((move+CURRENTSTEP)) -eq "$BACKUPCOUNT" ]; then
			MOVEBACKUP="$(get_file_name "$move")"
			if [ -d "$MOVEBACKUP" ]; then
				mv "$MOVEBACKUP" "$(get_file_name $((move + 1)))"
			fi
			set_next_step
		fi
	done
fi

# Last Step: Hardlink-Copy 2 to 1
if [ "$CURRENTSTEP" -eq "$BACKUPCOUNT" ]; then
	BACKUP1="$(get_file_name 1)"
	BACKUP2="$(get_file_name 2)"
	if [ -d "$BACKUP2" ]; then
		if [ -d backup_expired ]; then
			mv backup_expired "$BACKUP1"
		fi
		cp -alf "$BACKUP2"/. "$BACKUP1" 2> /dev/null
	else
		mkdir "$BACKUP1"
	fi
	set_next_step
fi

# All steps done!
exit 0
